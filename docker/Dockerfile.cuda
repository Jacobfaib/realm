FROM nvidia/cuda:12.8.0-base-ubuntu22.04

LABEL org.opencontainers.image.authors="Sean Treichler <sean@nvidia.com>"

RUN dpkg --add-architecture i386 && \
    apt-get update -qq && \
    apt-get install -qq apt-transport-https ca-certificates software-properties-common wget curl && \
    add-apt-repository ppa:pypy/ppa -y && \
    apt-get update -qq && \
    apt-get install -qq \
      build-essential autoconf git time wget \
      libpython3-dev python3-pip pypy3 \
      g++-9 g++-10 g++-11 \
      gfortran-9 gfortran-10 gfortran-11 \
      gcc-9-multilib g++-9-multilib \
      gcc-10-multilib g++-10-multilib \
      gcc-11-multilib g++-11-multilib \
      clang-11 libclang-11-dev llvm-11-dev \
      clang-12 libclang-12-dev llvm-12-dev libomp-12-dev \
      libdw-dev \
      libncurses5-dev libedit-dev \
      zlib1g-dev zlib1g-dev:i386 \
      mpich libmpich-dev \
      libblas-dev liblapack-dev libhdf5-dev \
      libssl-dev \
      cmake ccache \
      pkg-config \
      gdb vim

# Install the hip repo
RUN wget https://repo.radeon.com/rocm/rocm.gpg.key -O - | apt-key add - && \
    add-apt-repository -y "deb https://repo.radeon.com/rocm/apt/6.2.2 ubuntu main" && \
    apt-get update -qq && \
    apt-get install -qq rocm-core hipcc-nvidia

RUN pip3 install --upgrade 'pip>=22,<23' && \
    pip3 install --upgrade 'setuptools>=62,<63' 'setuptools_rust>=1.3,<1.4' && \
    pip3 install cffi github3.py 'numpy>=1.22,<1.23' 'cryptography>=37,<38' 'pandas>=1.4,<1.5' 'h5py>=3.10,<3.11' 'notebook>=6.4,<6.5' 'mypy>=1.7,<1.8' joblib daff tabulate
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain 1.84.0 -y

# install gitlab-runner
RUN wget -O /tmp/gitlab-runner-script.deb.sh https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh && \
    bash /tmp/gitlab-runner-script.deb.sh && \
    apt-get install -qq gitlab-runner && \
    apt-get clean && \
    rm -f /tmp/gitlab-runner-script.deb.sh

# install a bunch of flavors of CUDA (add items to the end to take advantage of image caching)
RUN wget -nv https://developer.download.nvidia.com/compute/cuda/11.7.0/local_installers/cuda_11.7.0_515.43.04_linux.run && \
   bash ./cuda_11.7.0_515.43.04_linux.run --toolkit --silent --override && \
   rm ./cuda_11.7.0_515.43.04_linux.run
RUN wget -nv https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda_12.1.1_530.30.02_linux.run && \
   bash ./cuda_12.1.1_530.30.02_linux.run --toolkit --silent --override && \
   rm ./cuda_12.1.1_530.30.02_linux.run
RUN wget -nv https://developer.download.nvidia.com/compute/cuda/12.5.1/local_installers/cuda_12.5.1_555.42.06_linux.run && \
    bash ./cuda_12.5.1_555.42.06_linux.run --toolkit --silent --override && \
    rm ./cuda_12.5.1_555.42.06_linux.run
RUN wget -nv https://developer.download.nvidia.com/compute/cuda/12.8.0/local_installers/cuda_12.8.0_570.86.10_linux.run && \
    bash ./cuda_12.8.0_570.86.10_linux.run --toolkit --silent --override && \
    rm ./cuda_12.8.0_570.86.10_linux.run
RUN rm /usr/local/cuda


RUN wget https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.5.tar.gz && \
    echo "5cbefa0780b84f4126743c40cdd6a334b2f0574cd7fd95050fb1ac0ddbb7f0b8  openmpi-5.0.5.tar.gz" | shasum --check && \
    tar -xf openmpi-5.0.5.tar.gz && \
    mkdir -p openmpi-5.0.5/build /usr/local/ompi && \
    (cd openmpi-5.0.5/build && \
    ../configure --prefix=/usr/local/ompi --enable-mpirun-prefix-by-default && \
    make -j install) && \
    rm -rf openmpi-5.0.5.tar.gz openmpi-5.0.5

RUN apt-get clean
